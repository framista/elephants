{"version":3,"sources":["redux/elephants/reducer.js","redux/types.js","redux/menu/reducer.js","redux/store.js","redux/elephants/actions.js","components/diamond/index.js","components/list-diamond/index.js","components/accordian/index.js","components/list-accordian/index.js","utils/elephantLogic.js","components/container/index.js","components/menu/index.js","redux/menu/actions.js","App.js","index.js"],"names":["initialState","loading","elephants","error","reducer","state","action","type","payload","listType","combineReducers","reducerElephant","menu","reducerMenu","store","createStore","composeWithDevTools","applyMiddleware","thunk","fetchElephantsRequest","Diamond","elephant","console","log","className","style","backgroundImage","image","name","ListDiamond","map","key","_id","Accordian","toogleOpen","note","open","dob","dod","species","sex","affiliation","onClick","src","alt","ListAccordian","useState","elephantsAccordian","setElephantsAccordian","useEffect","newElephantsArray","objects","el","content","addOpenPropertyForItemsInContent","reduce","acc","object","toLowerCase","index","findIndex","letter","charAt","push","id","toUpperCase","connect","dispatch","fetchElephants","axios","get","herokuAnywhareUrl","then","response","data","filter","includes","length","sort","a","b","localeCompare","fetchElephantsSuccess","catch","errorMessage","message","fetchElephantsFailure","props","changeList","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.73e5dd3d.chunk.js","sourcesContent":["import {\r\n  FETCH_ELEPHANTS_REQUEST,\r\n  FETCH_ELEPHANTS_SUCCESS,\r\n  FETCH_ELEPHANTS_FAILURE,\r\n} from '../types';\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  elephants: [],\r\n  error: '',\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_ELEPHANTS_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case FETCH_ELEPHANTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        elephants: action.payload,\r\n        error: '',\r\n      };\r\n    case FETCH_ELEPHANTS_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        elephants: [],\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","// elephants\r\nexport const FETCH_ELEPHANTS_REQUEST = 'FETCH_ELEPHANTS_REQUEST';\r\nexport const FETCH_ELEPHANTS_SUCCESS = 'FETCH_ELEPHANTS_SUCCESS';\r\nexport const FETCH_ELEPHANTS_FAILURE = 'FETCH_ELEPHANTS_FAILURE';\r\n\r\n// menu\r\nexport const CHANGE_LIST = 'CHANGE_LIST';","import { CHANGE_LIST } from '../types';\r\n\r\nconst initialState = {\r\n  listType: 'diamonds',\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case CHANGE_LIST:\r\n      return {\r\n        ...state,\r\n        listType: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport reducerElephant from './elephants/reducer';\r\nimport reducerMenu from './menu/reducer';\r\n\r\nconst reducer = combineReducers({\r\n  elephants: reducerElephant,\r\n  menu: reducerMenu,\r\n});\r\n\r\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)));\r\n\r\nexport default store;\r\n","import axios from 'axios';\r\nimport {\r\n  FETCH_ELEPHANTS_REQUEST,\r\n  FETCH_ELEPHANTS_SUCCESS,\r\n  FETCH_ELEPHANTS_FAILURE,\r\n} from '../types';\r\n\r\nexport const fetchElephantsRequest = () => ({\r\n  type: FETCH_ELEPHANTS_REQUEST,\r\n});\r\n\r\nexport const fetchElephantsSuccess = (elephants) => ({\r\n  type: FETCH_ELEPHANTS_SUCCESS,\r\n  payload: elephants,\r\n});\r\n\r\nexport const fetchElephantsFailure = (error) => ({\r\n  type: FETCH_ELEPHANTS_FAILURE,\r\n  payload: error,\r\n});\r\n\r\nexport const fetchElephants = () => {\r\n  const herokuAnywhareUrl = 'https://cors-anywhere.herokuapp.com/';\r\n  const elephantsUrl = 'https://elephant-api.herokuapp.com/elephants';\r\n  const endpoint = herokuAnywhareUrl + elephantsUrl;\r\n  return (dispatch) => {\r\n    dispatch(fetchElephantsRequest);\r\n    axios\r\n      .get(endpoint)\r\n      .then((response) => {\r\n        const elephants = response.data.filter(\r\n          (el) =>\r\n            el.index && !el.image.includes('missing') && el.name.length < 12\r\n        );\r\n        elephants.sort((a, b) =>\r\n          a.name.toLowerCase().localeCompare(b.name.toLowerCase())\r\n        );\r\n        dispatch(fetchElephantsSuccess(elephants));\r\n      })\r\n      .catch((error) => {\r\n        const errorMessage = error.message;\r\n        dispatch(fetchElephantsFailure(errorMessage));\r\n      });\r\n  };\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './style.css';\r\n\r\nconst Diamond = ({ elephant }) => {\r\n  console.log(elephant);\r\n  return (\r\n    <li className=\"diamond__li\">\r\n      <div className=\"diamond\">\r\n        <div\r\n          className=\"diamond__image--background\"\r\n          style={{ backgroundImage: `url(${elephant.image})` }}\r\n        ></div>\r\n      </div>\r\n      <p className=\"diamond__name\">{elephant.name}</p>\r\n    </li>\r\n  );\r\n};\r\n\r\nDiamond.propTypes = {\r\n  elephant: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Diamond;\r\n","import React from 'react';\r\nimport Diamond from '../diamond';\r\nimport PropTypes from 'prop-types';\r\nimport './style.css';\r\n\r\nconst ListDiamond = ({ elephants }) => {\r\n  return (\r\n    <ul className=\"list-diamond\">\r\n      {elephants.map((elephant) => (\r\n        <Diamond key={elephant._id} elephant={elephant} />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nListDiamond.propTypes = { elephants: PropTypes.array.isRequired };\r\n\r\nexport default ListDiamond;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './style.css';\r\nimport { IoIosArrowDropdown, IoIosArrowDropup } from 'react-icons/io';\r\n\r\nconst Accordian = ({ elephant, toogleOpen }) => {\r\n  const {\r\n    name,\r\n    note,\r\n    open,\r\n    _id,\r\n    image,\r\n    dob,\r\n    dod,\r\n    species,\r\n    sex,\r\n    affiliation,\r\n  } = elephant;\r\n  console.log(elephant);\r\n  return (\r\n    <div className=\"accordian\">\r\n      <div\r\n        className={`accordian__header ${open ? 'accordian__header--open' : ''}`}\r\n        onClick={() => toogleOpen(_id)}\r\n      >\r\n        {name}\r\n        {open ? (\r\n          <IoIosArrowDropup className=\"accordian__icon\" />\r\n        ) : (\r\n          <IoIosArrowDropdown className=\"accordian__icon\" />\r\n        )}\r\n      </div>\r\n      <div className={`accordian__body ${open ? 'accordian__body--open' : ''}`}>\r\n        <div className=\"accordian__info\">\r\n          <h2 className=\"accordian__name\">{name}</h2>\r\n          <h3 className=\"accordian__affiliation\">{affiliation}</h3>\r\n          <h4 className=\"accordian__species\">\r\n            {dob} - {dod} / {species} / {sex}\r\n          </h4>\r\n          <p className=\"accordian__description\">{note}</p>\r\n        </div>\r\n        <div className=\"accordian__image\">\r\n          <img src={image} alt={name} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nAccordian.propTypes = {\r\n  elephant: PropTypes.object.isRequired,\r\n  toogleOpen: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Accordian;\r\n","import React, { Fragment, useState, useEffect } from 'react';\r\nimport Accordian from '../accordian';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  getAlphabeticalList,\r\n  addOpenPropertyForItemsInContent,\r\n} from '../../utils/elephantLogic';\r\nimport './style.css';\r\n\r\nconst ListAccordian = ({ elephants }) => {\r\n  const [elephantsAccordian, setElephantsAccordian] = useState([]);\r\n  useEffect(() => {\r\n    const newElephantsArray = addOpenPropertyForItemsInContent(\r\n      getAlphabeticalList(elephants)\r\n    );\r\n    setElephantsAccordian([...newElephantsArray]);\r\n    //eslint-disable-next-line\r\n  }, [elephants]);\r\n  const toogleOpen = (id) => {\r\n    setElephantsAccordian(\r\n      elephantsAccordian.map((el) => {\r\n        el.content.map((elephant) => {\r\n          if (elephant._id === id) {\r\n            elephant.open = !elephant.open;\r\n          } else {\r\n            elephant.open = false;\r\n          }\r\n          return elephant;\r\n        });\r\n        return el;\r\n      })\r\n    );\r\n  };\r\n  return (\r\n    <div className=\"list-accordian\">\r\n      {elephantsAccordian.map((el) => {\r\n        return (\r\n          <Fragment key={el.letter}>\r\n            <h3 className=\"list-accordian__letter\">\r\n              {el.letter.toUpperCase()}\r\n            </h3>\r\n            {el.content.map((elephant) => (\r\n              <Accordian\r\n                key={elephant._id}\r\n                elephant={elephant}\r\n                toogleOpen={toogleOpen}\r\n              />\r\n            ))}\r\n          </Fragment>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nListAccordian.propTypes = {\r\n  elephants: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default ListAccordian;\r\n","export const getAlphabeticalList = (objects) => {\r\n  return objects.reduce((acc, object) => {\r\n    const name = object.name.toLowerCase();\r\n    const index = acc.findIndex((el) => el.letter === name.charAt(0));\r\n    if (index === -1) {\r\n      acc.push({ letter: name.charAt(0), content: [object] });\r\n    } else {\r\n      acc[index].content.push(object);\r\n    }\r\n    return acc;\r\n  }, []);\r\n};\r\n\r\nexport const addOpenPropertyForItemsInContent = (objects) => {\r\n  return objects.map((el) => {\r\n    el.content.map((elephant) => {\r\n      elephant.open = false;\r\n      return elephant;\r\n    });\r\n    return el;\r\n  });\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchElephants } from '../../redux/elephants/actions';\r\nimport ListDiamond from '../list-diamond';\r\nimport ListAccordian from '../list-accordian';\r\nimport './style.css';\r\n\r\nconst ElephantContainer = (props) => {\r\n  const { fetchElephants, loading, elephants, error, listType } = props;\r\n\r\n  useEffect(() => {\r\n    fetchElephants();\r\n    //eslint-disable-next-line\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  } else if (error) {\r\n    return <div>{error}</div>;\r\n  } else if (listType === 'diamonds') {\r\n    return <ListDiamond elephants={elephants} />;\r\n  }\r\n  return <ListAccordian elephants={elephants} />;\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  loading: state.elephants.loading,\r\n  elephants: state.elephants.elephants,\r\n  error: state.elephants.error,\r\n  listType: state.menu.listType,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchElephants: () => dispatch(fetchElephants()),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ElephantContainer);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './style.css';\r\nimport { changeList } from '../../redux/menu/actions';\r\n\r\nconst Menu = (props) => {\r\n  const { listType, changeList } = props;\r\n  console.log(listType);\r\n  return (\r\n    <div className=\"menu\">\r\n      <div\r\n        className={`menu__btn ${\r\n          listType === 'accordians' ? 'menu__btn--active' : ''\r\n        }`}\r\n        onClick={() => changeList('accordians')}\r\n      >\r\n        Lista\r\n      </div>\r\n      <div\r\n        className={`menu__btn ${\r\n          listType === 'diamonds' ? 'menu__btn--active' : ''\r\n        }`}\r\n        onClick={() => changeList('diamonds')}\r\n      >\r\n        Zdjęcia\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  listType: state.menu.listType,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    changeList: (type) => dispatch(changeList(type)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Menu);\r\n","import { CHANGE_LIST } from '../types';\r\n\r\nexport const changeList = (type) => ({\r\n  type: CHANGE_LIST,\r\n  payload: type,\r\n});\r\n","import React from 'react';\nimport 'normalize.css';\nimport './App.css';\nimport { Provider } from 'react-redux';\nimport store from './redux/store.js';\nimport ElephantContainer from './components/container';\nimport Menu from './components/menu';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Menu />\n      <ElephantContainer />\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}